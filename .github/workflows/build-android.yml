name: Build libwebp Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1.5.0
      with:
        ndk-version: r26d

    - name: Configure build environment
      run: |
        case "${{ matrix.abi }}" in
          armeabi-v7a)
            echo "TOOLCHAIN=$ANDROID_NDK_LATEST_HOME/toolchains/llvm/prebuilt/linux-x86_64" >> $GITHUB_ENV
            echo "TARGET=armv7a-linux-androideabi" >> $GITHUB_ENV
            echo "ARCH=arm" >> $GITHUB_ENV
            echo "API=21" >> $GITHUB_ENV
            ;;
          arm64-v8a)
            echo "TOOLCHAIN=$ANDROID_NDK_LATEST_HOME/toolchains/llvm/prebuilt/linux-x86_64" >> $GITHUB_ENV
            echo "TARGET=aarch64-linux-android" >> $GITHUB_ENV
            echo "ARCH=arm64" >> $GITHUB_ENV
            echo "API=21" >> $GITHUB_ENV
            ;;
          x86)
            echo "TOOLCHAIN=$ANDROID_NDK_LATEST_HOME/toolchains/llvm/prebuilt/linux-x86_64" >> $GITHUB_ENV
            echo "TARGET=i686-linux-android" >> $GITHUB_ENV
            echo "ARCH=x86" >> $GITHUB_ENV
            echo "API=21" >> $GITHUB_ENV
            ;;
          x86_64)
            echo "TOOLCHAIN=$ANDROID_NDK_LATEST_HOME/toolchains/llvm/prebuilt/linux-x86_64" >> $GITHUB_ENV
            echo "TARGET=x86_64-linux-android" >> $GITHUB_ENV
            echo "ARCH=x86_64" >> $GITHUB_ENV
            echo "API=21" >> $GITHUB_ENV
            ;;
        esac

    - name: Build libwebp for ${{ matrix.abi }}
      env:
        TOOLCHAIN: ${{ env.TOOLCHAIN }}
        TARGET: ${{ env.TARGET }}
        ARCH: ${{ env.ARCH }}
        API: ${{ env.API }}
      run: |
        mkdir build-android && cd build-android
        ../autogen.sh
        CC=$TOOLCHAIN/bin/${TARGET}${API}-clang \
        AR=$TOOLCHAIN/bin/llvm-ar \
        LD=$TOOLCHAIN/bin/ld \
        CFLAGS="--sysroot=$TOOLCHAIN/sysroot" \
        ../configure --host=${TARGET} --enable-shared --disable-static
        make -j$(nproc)

    - name: Rename and collect artifact
      run: |
        mkdir -p exported
        cp build-android/src/.libs/libwebp.so exported/glide-webp-${{ matrix.abi }}.so

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: glide-webp-${{ matrix.abi }}
        path: exported/glide-webp-${{ matrix.abi }}.so
