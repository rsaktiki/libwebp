name: Build libwebp Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1.5.0
      with:
        ndk-version: r26d

    - name: Install CMake (jika belum ada)
      run: sudo apt-get update && sudo apt-get install -y cmake

    - name: Build libwebp for ${{ matrix.abi }}
      run: |
        mkdir build-android && cd build-android

        case "${{ matrix.abi }}" in
          armeabi-v7a)
            ANDROID_ABI="armeabi-v7a" ;;
          arm64-v8a)
            ANDROID_ABI="arm64-v8a" ;;
          x86)
            ANDROID_ABI="x86" ;;
          x86_64)
            ANDROID_ABI="x86_64" ;;
        esac

        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_LATEST_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=$ANDROID_ABI \
          -DANDROID_PLATFORM=android-21 \
          -DBUILD_SHARED_LIBS=ON

        cmake --build . --config Release -j$(nproc)

    - name: Rename & Collect
      run: |
        mkdir -p exported
        if [ -f build-android/src/libwebp.so ]; then
          cp build-android/src/libwebp.so exported/glide-webp-${{ matrix.abi }}.so
        else
          # fallback untuk struktur folder berbeda
          find build-android -name 'libwebp.so' -exec cp {} exported/glide-webp-${{ matrix.abi }}.so \;
        fi

    - name: Upload hasil build
      uses: actions/upload-artifact@v4
      with:
        name: glide-webp-${{ matrix.abi }}
        path: exported/glide-webp-${{ matrix.abi }}.so
